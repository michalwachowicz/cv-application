@use "sass:map";

$themes: (
  light: (
    background: #e5e7eb,
    text-main: #030712,
    text-inactive: #4b5563,
    text-label: #6b7280,
    card: #f9fafb,
    card-inactive: #d1d5db,
    card-counter-inactive: #4b5563,
    card-counter-text-inactive: #d1d5db,
    input: #d1d5db,
    input-photo: #6b7280,
    btn-neutral: #dddfe3,
    btn-neutral-text: #4b5563,
    placeholder: #6b7280,
  ),
  dark: (
    background: #111827,
    text-main: #f9fafb,
    text-inactive: #9ca3af,
    text-label: #d1d5db,
    card: #374151,
    card-inactive: #1f2937,
    card-counter-inactive: #374151,
    card-counter-text-inactive: #9ca3af,
    input: #4b5563,
    input-photo: #9ca3af,
    btn-neutral: #6b7280,
    btn-neutral-text: #f3f4f6,
    placeholder: #9ca3af,
  ),
);

@function themed($property) {
  @return map.get($theme-map, $property);
}

@mixin themify($is-wrapper: false) {
  @each $theme, $map in $themes {
    $theme-map: () !global;
    @each $key, $submap in $map {
      $value: map.get(map.get($themes, $theme), "#{$key}");
      $theme-map: map.merge(
        $theme-map,
        (
          $key: $value,
        )
      ) !global;
    }

    @if $theme == "light" {
      @content;
    } @else if $is-wrapper {
      &.theme-#{$theme} {
        @content;
      }
    } @else {
      .page-wrapper.theme-#{$theme} & {
        @content;
      }
    }

    $theme-map: null !global;
  }
}
